<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="https://rasooll.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://rasooll.com/" rel="alternate" type="text/html" /><updated>2020-05-24T09:52:47+00:00</updated><id>https://rasooll.com/feed.xml</id><title type="html">رسول صفری</title><subtitle>وبلاگی برای انتشار حرف هایم!</subtitle><entry><title type="html">آموزش استفاده از Ceph RBD در کوبرنتیز</title><link href="https://rasooll.com/how-to-use-ceph-rbd-in-k8s/" rel="alternate" type="text/html" title="آموزش استفاده از Ceph RBD در کوبرنتیز" /><published>2020-05-24T00:00:00+00:00</published><updated>2020-05-24T00:00:00+00:00</updated><id>https://rasooll.com/how-to-use-ceph-rbd-in-k8s</id><content type="html" xml:base="https://rasooll.com/how-to-use-ceph-rbd-in-k8s/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/k8s-ceph.png&quot; alt=&quot;Kubernetes + Ceph LOGO&quot; /&gt;&lt;/p&gt;
&lt;p&gt;امروز می‌خوام توی این پست درباره‌ی نحوه استفاده از Ceph RDB در PVC های کوبرنتیز بنویسم. &lt;br /&gt;
توجه: در این آموزش فرض بر این است که شما از یک Ceph provider سرویس می‌گیرید، لذا از توضیحات مربوط به ساخت Pool در Ceph صرف نظر شده است.&lt;/p&gt;

&lt;p&gt;خب تا اینجای کار شما باید اطلاعات اتصال به یک Ceph pool را داشته باشید که در ادامه از آنها استفاده خواهیم کرد.&lt;/p&gt;

&lt;h3 id=&quot;قدم-اول---راه-اندازی-rbd-provisioner-&quot;&gt;قدم اول - راه اندازی rbd-provisioner :&lt;/h3&gt;

&lt;p&gt;برای دیپلوی کردن rbd-provisioner می‌توانید از این &lt;a href=&quot;https://github.com/rasooll/rbd-provisioner&quot;&gt;پروژه&lt;/a&gt; در گیت‌هاب با استفاده از دستورات زیر استفاده کنید:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/rasooll/rbd-provisioner.git
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;kubectl apply -n kube-system -f ./rbd-provisioner/deply
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;به این صورت می‌توانیم دیپلوی را چک کنیم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ kubectl get pods -l app=rbd-provisioner -n kube-system
NAME                               READY   STATUS    RESTARTS   AGE
rbd-provisioner-75b85f85bd-p9b8c   1/1     Running   0         3m45s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;در اینجا ما توانستیم rbd-provisioner را در نیم‌اسپیس &lt;code class=&quot;highlighter-rouge&quot;&gt;kube-system&lt;/code&gt; دیپلوی کنیم.&lt;/p&gt;

&lt;h3 id=&quot;قدم-دوم---ساخت-secretها&quot;&gt;قدم دوم - ساخت Secretها:&lt;/h3&gt;

&lt;p&gt;برای &lt;code class=&quot;highlighter-rouge&quot;&gt;admin-key&lt;/code&gt; و &lt;code class=&quot;highlighter-rouge&quot;&gt;client-key&lt;/code&gt; که از سرویس دهنده Ceph گرفته‌ایم نیاز است یک سکرت به صورت زیر بسازیم:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;kubectl create secret generic ceph-admin-secret &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kubernetes.io/rbd&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --from-literal&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;key-value&amp;gt;'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --namespace&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;kube-system
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;به جای &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;key-value&amp;gt;&lt;/code&gt; باید مقدار &lt;code class=&quot;highlighter-rouge&quot;&gt;admin-key&lt;/code&gt; خود را قرار دهید.
و برای &lt;code class=&quot;highlighter-rouge&quot;&gt;client-key&lt;/code&gt; هم به همین صورت:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl create secret generic ceph-k8s-secret &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kubernetes.io/rbd&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --from-literal&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;key-value&amp;gt;'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --namespace&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;kube-system
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;قدم-سوم---ساخت-storage-class&quot;&gt;قدم سوم - ساخت Storage Class:&lt;/h3&gt;

&lt;p&gt;فرض می‌کنیم آدرس مانیتورهای Ceph ما به صورت زیر باشد:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;10.10.10.11:6789&lt;/li&gt;
  &lt;li&gt;10.10.10.12:6789&lt;/li&gt;
  &lt;li&gt;10.10.10.13:6789&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;لازم هست برای آنها Service و ‌Endpoint بسازیم چون اگر زمانی آدرس آنها تغییر کند و ما مستقیما از آنها در storageClass خود استفاده کرده باشیم تمامی PVC هایی که قبلا ساخته ایم دیگر کار نخواهند کرد.&lt;/p&gt;

&lt;p&gt;در ابتدا این پروژه را Clone می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/rasooll/k8s-ceph-storageclass.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;سپس فایل های endpoint و storageClass را با اطلاعاتی که از سرویس دهنده Ceph گرفته‌ایم تکمیل می‌کنیم و با استفاده از دستور زیر storageClass را می‌سازیم:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;kubectl apply -n kube-system -f ./k8s-ceph-storageclass/deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;قدم-چهارم---ساخت-pvc-برای-تست&quot;&gt;قدم چهارم - ساخت PVC برای تست:&lt;/h3&gt;

&lt;p&gt;ابتدا فایل مربوط به ساخت pvc را ایجاد می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;vim ceph-rbd-claim.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PersistentVolumeClaim&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ceph-rbd-claim1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;accessModes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ReadWriteOnce&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;storageClassName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ceph-rbd&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1Gi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;سپس آن را اعمال می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;kubectl apply -f ceph-rbd-claim.yml
persistentvolumeclaim/ceph-rbd-claim1 created
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;و در نهایت خواهیم داشت:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;kubectl get pvc
NAME              STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
ceph-rbd-claim1   Bound    pvc-c6f4399d-43cf-4fc1-ba14-cc22f5c85304   1Gi        RWO            ceph-rbd       43s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;اگر مانند خروجی بالا بود که همه چیز ردیف هست اما اگر نبود به من پیام بدید!&lt;/p&gt;</content><author><name></name></author><category term="آموزشی" /><category term="kubernetes" /><category term="k8s" /><category term="ceph" /><category term="rbd" /><category term="remotestorage" /><category term="storageclass" /><summary type="html">امروز می‌خوام توی این پست درباره‌ی نحوه استفاده از Ceph RDB در PVC های کوبرنتیز بنویسم. توجه: در این آموزش فرض بر این است که شما از یک Ceph provider سرویس می‌گیرید، لذا از توضیحات مربوط به ساخت Pool در Ceph صرف نظر شده است.</summary></entry><entry><title type="html">آموزش استفاده از گواهی LetsEncrypt SSL در ایمیل سرور Zimbra</title><link href="https://rasooll.com/install-letsencrypt-in-zimbra/" rel="alternate" type="text/html" title="آموزش استفاده از گواهی LetsEncrypt SSL در ایمیل سرور Zimbra" /><published>2019-09-10T00:00:00+00:00</published><updated>2019-09-10T00:00:00+00:00</updated><id>https://rasooll.com/install-letsencrypt-in-zimbra</id><content type="html" xml:base="https://rasooll.com/install-letsencrypt-in-zimbra/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/zimbra-letsencrypt1.png&quot; alt=&quot;zimbra-letsencrypt1&quot; /&gt;&lt;/p&gt;
&lt;p&gt;سلام، امروز میخواهیم با همدیگه در ایمیل سرور Zimbra یک گواهی SSL از نوع LetsEncrypt نصب کنیم، کار خیلی آسونی هست بریم که انجامش بدیم.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;نکته:&lt;/strong&gt; در Zimbra Server نسخه ۸.۷ و بالاتر برخی دستورات با کاربر zimbra انجام می‌شود، اما در نسخه ۸.۶ و پایین‌تر تمامی این دستورات باید با کاربر root انجام شوند.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ابتدا باید سرویس &lt;code class=&quot;highlighter-rouge&quot;&gt;zimbraproxy&lt;/code&gt; و &lt;code class=&quot;highlighter-rouge&quot;&gt;mailboxd&lt;/code&gt; رو متوقف کنیم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ zmproxyctl stop
$ zmmailboxdctl stop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال نیاز است تا پروژه LetsEncrypt رو داشته باشیم(البته می‌توانید از بسته Certbot نیز با توجه با سیستم عامل یا توزیع خود استفاده کنید).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/letsencrypt/letsencrypt
$ cd letsencrypt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;الان با استفاده از دستور زیر می‌توانیم برای دامنه مورد نظر خودمون درخواست گواهی SSL بدهیم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ./letsencrypt-auto certonly --standalone -d xmpp.example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;چون سرویس &lt;code class=&quot;highlighter-rouge&quot;&gt;zimbraproxy&lt;/code&gt; متوقف شده است یک وب سرور standalone میتواند روی پورت ۸۰ شروع به کار کند برای تایید هویت دامنه شما.&lt;/p&gt;

&lt;p&gt;با دیدن خروجی مانند زیر یعنی گواهی SSL شما صادر شده است:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/zimbra86.zimbra.io/fullchain.pem. Your cert
   will expire on 2016-03-04. To obtain a new version of the
   certificate in the future, simply run Let's Encrypt again.
 - If like Let's Encrypt, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;فایل های SSL کجا قرار دارند؟ در مسیر زیر&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/letsencrypt/live/domainname
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;که در اینجا domainname همان نام دامنه شماست.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@zimbra86:/etc/letsencrypt/live/zimbra86.zimbra.io# ls -al
total 8
drwxr-xr-x 2 root root 4096 Dec  5 16:46 .
drwx------ 3 root root 4096 Dec  5 16:46 ..
lrwxrwxrwx 1 root root   42 Dec  5 16:46 cert.pem -&amp;gt; ../../archive/zimbra86.zimbra.io/cert1.pem
lrwxrwxrwx 1 root root   43 Dec  5 16:46 chain.pem -&amp;gt; ../../archive/zimbra86.zimbra.io/chain1.pem
lrwxrwxrwx 1 root root   47 Dec  5 16:46 fullchain.pem -&amp;gt; ../../archive/zimbra86.zimbra.io/fullchain1.pem
lrwxrwxrwx 1 root root   45 Dec  5 16:46 privkey.pem -&amp;gt; ../../archive/zimbra86.zimbra.io/privkey1.pem
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال شما علاوه بر Intermediate CA نیاز به Root CA نیز دارید که میتوانید آن را از &lt;a href=&quot;https://www.identrust.com/certificates/trustid/root-download-x3.html&quot;&gt;این لینک&lt;/a&gt; دریافت نمایید.&lt;/p&gt;

&lt;p&gt;فایل chain.pem را با یک ویرایشگر متن باز کرده و یک نمونه از Root CA مانند زیر به انتهای فایل خود اضافه کنید.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-----BEGIN CERTIFICATE-----
YOURCHAIN
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/
MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
DkRTVCBSb290IENBIFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVow
PzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD
Ew5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmTrE4O
rz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEq
OLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9b
xiqKqy69cK3FCxolkHRyxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw
7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaD
aeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
HQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQMA0GCSqG
SIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69
ikugdB/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXr
AvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZz
R8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5
JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06XyxV3bqxbYo
Ob8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ
-----END CERTIFICATE-----
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال با استفاده از دستورات زیر گواهی SSL خود را به محل نصب Zimbra منتقل می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@mail2:~# mkdir /opt/zimbra/ssl/letsencrypt
root@mail2:~# cp /etc/letsencrypt/live/mail2.next.zimbra.io/* /opt/zimbra/ssl/letsencrypt/
root@mail2:~# chown zimbra:zimbra /opt/zimbra/ssl/letsencrypt/*
root@mail2:~# ls -la /opt/zimbra/ssl/letsencrypt/
total 24
drwxr-xr-x 2 root   root   4096 Jul 15 22:59 .
drwxr-xr-x 8 zimbra zimbra 4096 Jul 15 22:59 ..
-rw-r--r-- 1 zimbra zimbra 1809 Jul 15 22:59 cert.pem
-rw-r--r-- 1 zimbra zimbra 2847 Jul 15 22:59 chain.pem
-rw-r--r-- 1 zimbra zimbra 3456 Jul 15 22:59 fullchain.pem
-rw-r--r-- 1 zimbra zimbra 1704 Jul 15 22:59 privkey.pem
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;توجه داشته باید نام دامنه خود را جایگزین کنید.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;حال باید اعتبار گواهی SSL خود را بررسی کنید:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zimbra@zimbra87:/opt/zimbra/ssl/letsencrypt/$ /opt/zimbra/bin/zmcertmgr verifycrt comm privkey.pem cert.pem chain.pem 
** Verifying cert.pem against privkey.pem
Certificate (cert.pem) and private key (privkey.pem) match.
Valid Certificate: cert.pem: OK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال بهتر است که از گواهی های موجود در سرور بکاپ بگیریم، به هر حال بکاپ هیچوقت ضرر نداره.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp -a /opt/zimbra/ssl/zimbra /opt/zimbra/ssl/zimbra.$(date &quot;+%Y%m%d&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال باید Private key مربوط به SSL خودمون رو کپی کنیم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp /opt/zimbra/ssl/letsencrypt/privkey.pem /opt/zimbra/ssl/zimbra/commercial/commercial.key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;الان می‌تونیم Deploy نهایی رو انجام بدیم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zimbra@mail2://opt/zimbra/ssl/letsencrypt/$ /opt/zimbra/bin/zmcertmgr deploycrt comm cert.pem chain.pem 
** Verifying 'cert.pem' against '/opt/zimbra/ssl/zimbra/commercial/commercial.key'
Certificate 'cert.pem' and private key '/opt/zimbra/ssl/zimbra/commercial/commercial.key' match.
** Verifying 'cert.pem' against 'chain.pem'
Valid certificate chain: cert.pem: OK
** Copying 'cert.pem' to '/opt/zimbra/ssl/zimbra/commercial/commercial.crt'
** Copying 'chain.pem' to '/opt/zimbra/ssl/zimbra/commercial/commercial_ca.crt'
** Appending ca chain 'chain.pem' to '/opt/zimbra/ssl/zimbra/commercial/commercial.crt'
** Importing cert '/opt/zimbra/ssl/zimbra/commercial/commercial_ca.crt' as 'zcs-user-commercial_ca' into cacerts '/opt/zimbra/common/lib/jvm/java/jre/lib/security/cacerts'
** NOTE: restart mailboxd to use the imported certificate.
** Saving config key 'zimbraSSLCertificate' via zmprov modifyServer mail2.next.zimbra.io...failed (rc=1)
** Installing ldap certificate '/opt/zimbra/conf/slapd.crt' and key '/opt/zimbra/conf/slapd.key'
** Copying '/opt/zimbra/ssl/zimbra/commercial/commercial.crt' to '/opt/zimbra/conf/slapd.crt'
** Copying '/opt/zimbra/ssl/zimbra/commercial/commercial.key' to '/opt/zimbra/conf/slapd.key'
** Creating file '/opt/zimbra/ssl/zimbra/jetty.pkcs12'
** Creating keystore '/opt/zimbra/mailboxd/etc/keystore'
** Installing mta certificate '/opt/zimbra/conf/smtpd.crt' and key '/opt/zimbra/conf/smtpd.key'
** Copying '/opt/zimbra/ssl/zimbra/commercial/commercial.crt' to '/opt/zimbra/conf/smtpd.crt'
** Copying '/opt/zimbra/ssl/zimbra/commercial/commercial.key' to '/opt/zimbra/conf/smtpd.key'
** Installing proxy certificate '/opt/zimbra/conf/nginx.crt' and key '/opt/zimbra/conf/nginx.key'
** Copying '/opt/zimbra/ssl/zimbra/commercial/commercial.crt' to '/opt/zimbra/conf/nginx.crt'
** Copying '/opt/zimbra/ssl/zimbra/commercial/commercial.key' to '/opt/zimbra/conf/nginx.key'
** NOTE: restart services to use the new certificates.
** Cleaning up 3 files from '/opt/zimbra/conf/ca'
** Removing /opt/zimbra/conf/ca/41b01cbb.0
** Removing /opt/zimbra/conf/ca/ca.key
** Removing /opt/zimbra/conf/ca/ca.pem
** Copying CA to /opt/zimbra/conf/ca
** Copying '/opt/zimbra/ssl/zimbra/ca/ca.key' to '/opt/zimbra/conf/ca/ca.key'
** Copying '/opt/zimbra/ssl/zimbra/ca/ca.pem' to '/opt/zimbra/conf/ca/ca.pem'
** Creating CA hash symlink '41b01cbb.0' -&amp;gt; 'ca.pem'
** Creating /opt/zimbra/conf/ca/commercial_ca_1.crt
** Creating CA hash symlink '4f06f81d.0' -&amp;gt; 'commercial_ca_1.crt'
** Creating /opt/zimbra/conf/ca/commercial_ca_2.crt
** Creating CA hash symlink '2e5ac55d.0' -&amp;gt; 'commercial_ca_2.crt'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال یکبار لازم است تا سرور Zimbra راه اندازی مجدد گردد:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zmcontrol restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;کار تمام شد الان میتوانیم آدرس ایمیل سرور خودمون رو باز کنیم و صفحه زیر را ببینیم&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/zimbra-letsencrypt3.png&quot; alt=&quot;Zimbra login&quot; title=&quot;Zimbra login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;گواهی SSL ما نیز به صورت زیر است:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/zimbra-letsencrypt2.png&quot; alt=&quot;Zimbra&quot; title=&quot;Zimbra&quot; /&gt;&lt;/p&gt;

&lt;p&gt;کار تمام شد&lt;/p&gt;</content><author><name></name></author><category term="آموزشی" /><category term="SSL" /><category term="LetsEncrypt" /><category term="Zimbra" /><category term="Email" /><category term="Server" /><summary type="html">سلام، امروز میخواهیم با همدیگه در ایمیل سرور Zimbra یک گواهی SSL از نوع LetsEncrypt نصب کنیم، کار خیلی آسونی هست بریم که انجامش بدیم.</summary></entry><entry><title type="html">آموزش کانفیگ سیستم مانیتورینگ - Alertmanager</title><link href="https://rasooll.com/monitoring-system-alertmanager/" rel="alternate" type="text/html" title="آموزش کانفیگ سیستم مانیتورینگ - Alertmanager" /><published>2018-12-01T00:00:00+00:00</published><updated>2018-12-01T00:00:00+00:00</updated><id>https://rasooll.com/monitoring-system-alertmanager</id><content type="html" xml:base="https://rasooll.com/monitoring-system-alertmanager/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/prometheus-logo.png&quot; alt=&quot;Monitoring Prometheus Alertmanager&quot; /&gt;&lt;/p&gt;
&lt;p&gt;قسمت چهارم از سری آموزش های کانفیگ سیستم مانیتورینگ توسط Prometheus را شروع می‌کنیم.
در این بخش قصد داریم تا Alertmanager را کانفیگ کنیم، تا هر زمانی که مقدار دیتایی که در حال مانیتور کردن آن هستیم از حد مشخصی فاصله گرفت به سرعت با خبر شویم.&lt;/p&gt;

&lt;h3 id=&quot;چرا-prometheus-alertmanager-&quot;&gt;چرا Prometheus Alertmanager ؟&lt;/h3&gt;

&lt;p&gt;چون قابلیت شخصی سازی بسیار زیادی دارد و تقریبا می‌توان گفت کنترل همه چیز در دستان شماست!
می‌توانید تنظیم کنید برایتان ایمیل ارسال شود یا از طریق تلگرام، Slack و … شما را مطلع سازد، همچنین قابلیت ارسال Alert از طریق وب هوک به دیگر سیستم‌ها را نیز دارا می‌باشد.&lt;/p&gt;

&lt;p&gt;برای یادگیری بهتر این آموزش لازم است تا قسمت‌های قبلی آن را دیده باشید(دسترسی در پایین صفحه)&lt;/p&gt;

&lt;p&gt;برای شروع باید فایل docker-compose.yml را ویرایش کنیم و کانتینر مربوط به Alertmanager را اضافه کنیم:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;alertmanager:
image: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prometheus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alertmanager&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:latest&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;volumes:
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alertmanager_volume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alertmanager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;yml&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prometheus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alertmanager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;yml&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alertmanager_volume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;command:
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'--config.file=/etc/prometheus/alertmanager.yml'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'--storage.path=/data'&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;ports:
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9093&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9093&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;همچنین لازم است تا کانتینر alertmanager در کانتینر prom نیز لینک شود.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;سپس یک دایرکتوری به نام alertmanager_volume ایجاد کرده و فایل alertmanager.yml را داخل آن ایجاد میکنیم، محتویات این فایل به صورت زیر است:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'smtp.google.com:587'
  smtp_from: 'your-alerting-email@google.com'
  smtp_auth_username: 'your-alerting-email@gmail.com'
  smtp_auth_password: 'your-password'

route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 3h
  receiver: 'support-team-email'
receivers:
- name: 'support-team-email'
  email_configs:
      - to: 'your-email-for-get-alert@example.com'
          send_resolved: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال باید فایل prometheus.yml را که در قسمت اول ساختیم ویرایش نماییم و تنظیمات زیر را به آن اضافه نماییم:alerting:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  alertmanagers:
    - static_configs:
      - targets:
        - alertmanager:9093
rule_files:
  - &quot;prometheus.rules.yml&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;مقدار alertmanager:9093 همان نامی از که شما زمان لینک کردن alertmanager به prometheus وارد کرده‌اید.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;حال در کنار فایل prometheus.yml یک فایل جدید ایجاد می‌کنیم و نام آن را prometheus.rules.yml می‌گذاریم و محتویات آن نیز به صورت زیر می‌نویسیم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;groups:
  - name: nginx1
    rules:
        - alert: Active Connection
          expr: nginx_server_connections{instance=&quot;xxx.xxx.xxx.xxx:port&quot;, status=&quot;active&quot;} &amp;gt; 1000
          for: 5m
          labels:
            severity: 2
         annotations:
         summary: &quot;Value: {{ $value }}, Limit: 100&quot;
         description: &quot;This is a decscription.&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;برای توضیح کد بالا می‌توان گفت اگر کانکشن های active سرور مشخص شده برای ۵ دقیقه بیشتر از ۱۰۰۰ عدد بود برای ما alert ارسال شود.&lt;/p&gt;

&lt;p&gt;به همین صورت می‌توانید برای مقادیر مورد نظر خود rule نوشته و از alertmanager استفاده نمایید.&lt;/p&gt;

&lt;p&gt;قسمت چهارم از سری آموزش کانفیگ سیستم مانیتورینگ به پایان رسید.&lt;/p&gt;</content><author><name></name></author><category term="آموزشی" /><category term="monitoring" /><category term="prometheus" /><category term="devops" /><category term="docker" /><category term="linux" /><category term="sysadmin" /><category term="مانیتوریگ" /><category term="لینوکس" /><category term="مدیریت" /><summary type="html">قسمت چهارم از سری آموزش های کانفیگ سیستم مانیتورینگ توسط Prometheus را شروع می‌کنیم. در این بخش قصد داریم تا Alertmanager را کانفیگ کنیم، تا هر زمانی که مقدار دیتایی که در حال مانیتور کردن آن هستیم از حد مشخصی فاصله گرفت به سرعت با خبر شویم.</summary></entry><entry><title type="html">آموزش کانفیگ سیستم مانیتورینگ - Nginx</title><link href="https://rasooll.com/monitoring-system-nginx/" rel="alternate" type="text/html" title="آموزش کانفیگ سیستم مانیتورینگ - Nginx" /><published>2018-11-24T00:00:00+00:00</published><updated>2018-11-24T00:00:00+00:00</updated><id>https://rasooll.com/monitoring-system-nginx</id><content type="html" xml:base="https://rasooll.com/monitoring-system-nginx/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/nginx-logo.png&quot; alt=&quot;Monitoring Prometheus Grafana Nginx&quot; /&gt;&lt;/p&gt;
&lt;p&gt;قسمت سوم آموزش کانفیگ سیستم مانیتورینگ رو شروع میکنیم با آموزش مانیتور کردن Nginx.&lt;/p&gt;

&lt;p&gt;یک ماژول هست به اسم &lt;a href=&quot;https://github.com/vozlt/nginx-module-vts&quot;&gt;nginx-module-vts&lt;/a&gt; که دیتا های لازم برای مانیتور کردن Nginx را در اختیار ما قرار میدهد، در ابتدای کار باید این ماژول را نصب کنیم که نصب آن نیز به این صورت است:&lt;/p&gt;

&lt;p&gt;در توزیع اوبونتو ابتدا لازم است تا پیشنیازهای آن را نصب کنیم:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo apt install -y build-essential git tree
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo apt install -y perl libperl-dev libgd3 libgd-dev libgeoip1 libgeoip-dev geoip-bin libxml2 libxml2-dev libxslt1.1 libxslt1-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;سپس ماژول مربوطه را Clone می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone git://github.com/vozlt/nginx-module-vts.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال باید سورس Nginx را برای لینوکس دانلود کنیم &lt;a href=&quot;http://nginx.org/download/&quot;&gt;پیوند&lt;/a&gt; و بعد از خارج کردن از حالت فشرده وارد دایرکتوری آن می‌شویم و دستورات زیر را اجرا میکنیم:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --group&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/nginx &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --sbin-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/sbin/nginx &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --conf-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/nginx/nginx.conf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --pid-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run/nginx.pid &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --lock-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run/nginx.lock &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --error-log-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/log/nginx/error.log &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --http-log-path&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/log/nginx/access.log &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --with-http_gzip_static_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --with-http_stub_status_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --with-http_ssl_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --with-pcre &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --with-file-aio &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --with-http_realip_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --without-http_scgi_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --without-http_uwsgi_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --without-http_fastcgi_module &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --add-module&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/path/to/nginx-module-vts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;توجه کنید که خط آخر دستور بالا باید آدرس دایرکتوری ماژولی که Clone کرده‌اید را وارد نمایید.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;و سپس:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;make
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;کامپایل Nginx هم به پایان رسید، حال به مرحله‌ی پیکربندی میرسیم.
تنظیمات Nginx خود را باید به صورت زیر انجام دهید:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http {
    vhost_traffic_status_zone;
    ...
    server {
        ...
        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال برای دریافت دیتا توسط Prometheus باید از exporter مربوط به این کار استفاده کنیم.&lt;/p&gt;

&lt;p&gt;روی سروری که Nginx نصب است بااستفاده از دستور زیر کانتینر مربوط به exporter را راه اندازی میکنیم:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run  --restart always  --net host --env &lt;span class=&quot;nv&quot;&gt;NGINX_STATUS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost/status/format/json&quot;&lt;/span&gt; -d --name nginx-prometheus-exporter sophos/nginx-vts-exporter
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال روی پورت ۹۹۱۳ می‌توانیم به این exporter دسترسی داشته باشیم.&lt;/p&gt;

&lt;p&gt;الان نوبت به تنظیمات Prometheus برای اتصال به این exporter رسیده ، فایل prometheus.yml را باز می‌کنیم و تنظیمات زیر را در آن قرار میدهیم:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;job_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;nginx-exporter&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scrape_interval&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;15s&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;static_configs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;localhost:9913'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;مقدار لوکال هاست باید با آدرس Nginx جایگزین گردد.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;کار تقریبا تمام است فقط برای رسم نمودار برای دیتا ها ، ما از Grafana استفاده می‌کردیم که در اینجا باید داشبورد مربوط به این ماژول &lt;a href=&quot;https://grafana.com/dashboards/2949&quot;&gt;2949&lt;/a&gt; را نیز نصب کنیم.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/nginxchart.png&quot; alt=&quot;Demo&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="آموزشی" /><category term="monitoring" /><category term="prometheus" /><category term="devops" /><category term="docker" /><category term="linux" /><category term="sysadmin" /><category term="مانیتوریگ" /><category term="لینوکس" /><category term="مدیریت" /><summary type="html">قسمت سوم آموزش کانفیگ سیستم مانیتورینگ رو شروع میکنیم با آموزش مانیتور کردن Nginx.</summary></entry><entry><title type="html">آموزش کانفیگ سیستم مانیتورینگ - Grafana</title><link href="https://rasooll.com/monitoring-system-grafana/" rel="alternate" type="text/html" title="آموزش کانفیگ سیستم مانیتورینگ - Grafana" /><published>2018-11-17T00:00:00+00:00</published><updated>2018-11-17T00:00:00+00:00</updated><id>https://rasooll.com/monitoring-system-grafana</id><content type="html" xml:base="https://rasooll.com/monitoring-system-grafana/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/prometheus-grafana.jpg&quot; alt=&quot;Monitoring Prometheus Grafana&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;گرافانا-چیست&quot;&gt;گرافانا چیست؟&lt;/h3&gt;
&lt;p&gt;تا حالا شده یک سری دیتا داشته باشید و بخواهید نمودار برای دیتاهاتون رسم کنید؟ خوب Grafana دقیقا برای شما ساخته شده ولی در کنار این امکان کلی امکانات دیگه در اختیار شما قرار میدهد، مثلا شما میتوانید برای دیتا هاتون Alert تعریف کنید و اعلانات را از طریق ایمیل ، تلگرام و … دریافت کنید.&lt;/p&gt;

&lt;p&gt;راستی Grafana متن باز هم هست و در صورت تمایل می‌توانید روی پروژه مشارکت داشته باشید. &lt;a href=&quot;https://github.com/grafana/grafana&quot;&gt;پیوند&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;در مطلب قبل آموزش نصب و پیکربندی Prometheus را توضیح دادم یعنی در حال حاضر ما یکسری دیتا داریم که قصد داریم برای آنها گراف رسم کنیم.&lt;/p&gt;

&lt;h3 id=&quot;تنظیمات-docker-compose&quot;&gt;تنظیمات Docker compose:&lt;/h3&gt;
&lt;p&gt;به سرویس‌های فایل docker-compose.yml ای که داریم تنظیمات زیر را اضافه می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;grafana:
    image: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grafana&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grafana&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;restart: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;ports:
       &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;3000:3000&quot;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;depends_on:
      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prom&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;links:
      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prom&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:prom&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;volumes:
      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/your-path-to-volume/data/:/var/lib/grafana/&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/your-path-to-volume/config/grafana.ini:/etc/grafana/grafana.ini&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/your-path-to-volume/log/:/var/log/grafana/&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;برای grafana.ini ایجاد یک فایل خالی کافی است ، در آینده میتوانید کانفیگ‌های خود را در این فایل بنویسید.&lt;/li&gt;
  &lt;li&gt;کل دایرکتوری های ساخته شده باید توسط کاربر و گروه 472 قابل نوشتن باشد.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;حال باید یکبار Docker compose را راه‌اندازی مجدد کنیم، الان با استفاده از پورت ۳۰۰۰ به گرافانا دسترسی داریم نام کاربری و رمز عبور پیشفرض admin می باشد.&lt;/p&gt;

&lt;p&gt;از بخش Configuration وارد صفحه Data source می‌شویم و روی Add … کلیک می‌کنیم، نوع آن را Prometheus قرار میدهیم و آدرس سرویس خودمان را می‌دهیم که در اینجا برای ما prom:9090 می‌باشد.&lt;/p&gt;

&lt;p&gt;برای PostgreSQL می‌توانید از داشبورد شماره &lt;a href=&quot;https://grafana.com/dashboards/455&quot;&gt;455&lt;/a&gt; استفاده کنید.&lt;/p&gt;

&lt;p&gt;پیشنمایش:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/grafana-pgsql.png&quot; alt=&quot;Demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;این آموزش ادامه دارد …&lt;/p&gt;</content><author><name></name></author><category term="آموزشی" /><category term="monitoring" /><category term="prometheus" /><category term="devops" /><category term="docker" /><category term="linux" /><category term="sysadmin" /><category term="مانیتوریگ" /><category term="لینوکس" /><category term="مدیریت" /><summary type="html">گرافانا چیست؟ تا حالا شده یک سری دیتا داشته باشید و بخواهید نمودار برای دیتاهاتون رسم کنید؟ خوب Grafana دقیقا برای شما ساخته شده ولی در کنار این امکان کلی امکانات دیگه در اختیار شما قرار میدهد، مثلا شما میتوانید برای دیتا هاتون Alert تعریف کنید و اعلانات را از طریق ایمیل ، تلگرام و … دریافت کنید.</summary></entry><entry><title type="html">آموزش کانفیگ سیستم مانیتورینگ - Prometheus</title><link href="https://rasooll.com/monitoring-system-prometheus/" rel="alternate" type="text/html" title="آموزش کانفیگ سیستم مانیتورینگ - Prometheus" /><published>2018-11-10T00:00:00+00:00</published><updated>2018-11-10T00:00:00+00:00</updated><id>https://rasooll.com/monitoring-system-prometheus</id><content type="html" xml:base="https://rasooll.com/monitoring-system-prometheus/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/monitoring_prometheus.jpeg&quot; alt=&quot;Monitoring Prometheus&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;اول-از-هر-چیزی-prometheus-چیست&quot;&gt;اول از هر چیزی Prometheus چیست؟&lt;/h3&gt;
&lt;p&gt;یک سرویس مانیتورینگ همه فن حریف است که به صورت متن باز منتشر می‌شود &lt;a href=&quot;https://github.com/prometheus/prometheus&quot;&gt;پیوند&lt;/a&gt; ، همچنین این سرویس توسعه پذیری بسیار بالایی دارد و از افزونه‌های زیادی بهره میبرد.&lt;/p&gt;

&lt;h3 id=&quot;پیشنیازها&quot;&gt;پیشنیازها:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Docker&lt;/li&gt;
  &lt;li&gt;Docker Compose&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;کانفیگ-docker-compose&quot;&gt;کانفیگ Docker compose:&lt;/h4&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;version: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3&quot;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;services:
        prom:
                image: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prometheus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prometheus&lt;/span&gt;
                &lt;span class=&quot;ss&quot;&gt;volumes:
                        &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prometheus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;yml&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prometheus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prometheus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;yml&lt;/span&gt;
                &lt;span class=&quot;ss&quot;&gt;command: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus&quot;&lt;/span&gt;
                &lt;span class=&quot;ss&quot;&gt;restart: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;always&lt;/span&gt;
                &lt;span class=&quot;ss&quot;&gt;ports:
                        &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9090&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9090&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;فایل-prometheusyml&quot;&gt;فایل prometheus.yml:&lt;/h4&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;global:
    scrape_interval:     &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# By default, scrape targets every 15 seconds.&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;evaluation_interval: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# By default, scrape targets every 15 seconds.&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;external_labels:
          monitor: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'codelab-monitor'&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;scrape_configs:
         &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;job_name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'prometheus'&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;scrape_interval: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;# metrics_path defaults to '/metrics'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# scheme defaults to 'http'.&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;static_configs:
        &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;targets: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost:9090'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;توجه داشته باشید داخل فایل &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; باید آدرس مربوط به فایل &lt;code class=&quot;highlighter-rouge&quot;&gt;prometheus.yml&lt;/code&gt; را ویرایش نمایید.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;حال با استفاده از دستور زیر باید کانتینر مربوط به Prometheus را اجرا نمایید:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;خوب تبریک میگم الان شما روی پورت ۹۰۹۰ سرویس Prometheus را دارید.&lt;/p&gt;

&lt;p&gt;حال باید کانفیگ مربوط به سرویسی که میخواهید مانیتور کنید را انجام دهید ، Prometheus پارامترهای مورد نیاز را از طریق Exporter ها دریافت می‌کند &lt;a href=&quot;https://prometheus.io/docs/instrumenting/exporters/&quot;&gt;لیست کامل&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;راه-اندازی-و-کانفیگ-exporter-برای-prometheus&quot;&gt;راه اندازی و کانفیگ exporter برای Prometheus:&lt;/h3&gt;

&lt;p&gt;داخل فایل &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; در بخش &lt;code class=&quot;highlighter-rouge&quot;&gt;services&lt;/code&gt; تنظیمات زیر را اضافه میکنیم:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;postgres:
     image: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrouesnel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postgres_exporter&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;ports:
            &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;9187:9187&quot;&lt;/span&gt;
     &lt;span class=&quot;ss&quot;&gt;environment: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DATA_SOURCE_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;postgresql://postgres:password@localhost:5432/?sslmode=disable&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال لازم است که داخل فایل &lt;code class=&quot;highlighter-rouge&quot;&gt;prometheus.yml&lt;/code&gt; را نیز ویرایش نمایید و در انتهای آن تنظیمات زیر را وارد نمایید:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;job_name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;postgres&quot;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;scrape_interval: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;15s&quot;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;static_configs:
          &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;targets: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postgres:9187'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال باید کانتینر ها را راه اندازی مجدد نمایید.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker-compose &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;خوب دیگه کار تمام شد ، اکنون داخل Prometheus روی پورت ۹۰۹۰ میتوانید پارامترهای مربوط به مانیتورینگ PostgreSQL را مشاهده نمایید.&lt;/p&gt;

&lt;p&gt;این آموزش ادامه دارد ، در بخش بعدی آموزش مربوط به اتصال Grafana به Prometheus را خواهیم داشت…&lt;/p&gt;</content><author><name></name></author><category term="آموزشی" /><category term="monitoring" /><category term="prometheus" /><category term="devops" /><category term="docker" /><category term="linux" /><category term="sysadmin" /><category term="مانیتوریگ" /><category term="لینوکس" /><category term="مدیریت" /><summary type="html">اول از هر چیزی Prometheus چیست؟ یک سرویس مانیتورینگ همه فن حریف است که به صورت متن باز منتشر می‌شود پیوند ، همچنین این سرویس توسعه پذیری بسیار بالایی دارد و از افزونه‌های زیادی بهره میبرد.</summary></entry><entry><title type="html">آموزش استفاده از TravisCI در گیت هاب</title><link href="https://rasooll.com/how-to-use-travis-ci-for-github-pages/" rel="alternate" type="text/html" title="آموزش استفاده از TravisCI در گیت هاب" /><published>2018-07-26T00:00:00+00:00</published><updated>2018-07-26T00:00:00+00:00</updated><id>https://rasooll.com/how-to-use-travis-ci-for-github-pages</id><content type="html" xml:base="https://rasooll.com/how-to-use-travis-ci-for-github-pages/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/TravisCI.png&quot; alt=&quot;TravisCI&quot; /&gt;&lt;/p&gt;
&lt;p&gt;در این پست از وبلاگ قصد دارم نحوه استفاده از &lt;a href=&quot;https://travis-ci.org&quot;&gt;TravisCI&lt;/a&gt; در گیت هاب را همراه با یک مثال عملی توضیح دهم ، من برای وبلاگم از &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; که یک سیستم برای ایجاد سایت های استاتیک است استفاده می‌کنم و چند تا از پلاگین هایم به عنوان مثال تاریخ شمسی  را گیت هاب (gh-pages) نمیشناسه و برای استفاده از آن ها مجبور بودم که سایتم را روی سیستم خودم بیلد کنم و فایل های بیلد شده را مستقیما push کنم داخل گیت هاب که این کار بسیار خسته کننده بود اما حالا این کار را Travis برای من انجام میده …&lt;/p&gt;

&lt;h3 id=&quot;اصلا-ci-چیست&quot;&gt;اصلا CI چیست؟&lt;/h3&gt;

&lt;p&gt;CI یا همان &lt;strong&gt;Continuous Integration&lt;/strong&gt; به معنی ادغام مداوم  می باشد و فرایندی است که در آن توسعه دهندگان می توانند به طور مستمر کارهای خود را با هم یکپارچه کنند، هر بار که توسعه دهنده ای کدی را به سورس کنترل اضافه کند، توسط یک بیلد اتوماتیک آن کد بررسی خواهد شد این بررسی می تواند شامل بیلد کردن پروژه و یا اجرای تست های تعریف شده برای این پروژه باشد به طور کلی میشه گفت با CI مشکلات یکپارچه سازی به شدت کم میشه و تیم ها قادر خواهند بود به صورت منسجم تری به توسعه نرم افزار بپردازند.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;خوب دیگه بریم سراغ نحوه استفاده از TravisCI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;این سرویس برای تمامی مخازن عمومی گیت هاب رایگان است اما برای استفاده در مخازن خصوصی باید هزینه پرداخت نمایید.&lt;/p&gt;

&lt;p&gt;قبل از هر کاری باید وارد سایت آن شوید و با استفاده از گیت هاب لاگین کنید. &lt;a href=&quot;https://travis-ci.org&quot;&gt;پیوند&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;حال باید از لیست مخازن خود مخزن مورد نظر را فعال نمایید.&lt;/p&gt;

&lt;p&gt;اکنون باید وارد گیت هاب شده و وارد تنظیمات مخزن مورد نظر شوید سپس از منوی سمت چپ وارد بخش Intergrations &amp;amp; services شوید و پس از آن بر روی Add service کلیک نمایید ، حال از بخش باز شده Travis CI را انتخاب نمایید.&lt;/p&gt;

&lt;p&gt;User همان نام کاربری گیت هاب شماست و domain هم باید خالی گذاشته و تیک Active هم باید فعال باشد و اما توکن ، آنرا باید از سایت Travis کپی و در اینجا paste کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/travis-ci-token.png&quot; alt=&quot;TravisCI Token&quot; /&gt; اسکرین شات مربوط به توکن در TravisCI&lt;/p&gt;

&lt;p&gt;خوب الان تنظیمات به پایان رسید و باید فایل مربوط به کانفیگ Travis را مخزن خود ایجاد کنیم.
برای اینکار ما به یک فایل با نام &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; نیاز داریم.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;دقت داشته باشید که نقطه . در ابتدای نام فایل است&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;حال فایل فوق را به صورت زیر می‌نویسیم:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;lang: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;rvm:
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;before_install:
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;install:
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;script:
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builded&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;deploy:
  provider: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;skip_cleanup: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;github_token: &lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$GITHUB_TOKEN&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Set in travis-ci.org dashboard&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;local_dir: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builded&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;target_branch: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;fqdn: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rasooll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;repo: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rasooll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rasooll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;on:
    branch: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;در این فایل تنظیمات به ‌Travis گفته ایم که از روبی نسخه 2.5.1 استفاده کند و بعد از آن &lt;code class=&quot;highlighter-rouge&quot;&gt;bundler&lt;/code&gt; و &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; را نصب کند و در ادامه با استفاده از &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle&lt;/code&gt; پیشنیاز های مشخص شده داخل GemFile را در شاخه‌ی &lt;code class=&quot;highlighter-rouge&quot;&gt;vendor/bundle&lt;/code&gt; نصب کند و در آخر نیز گفته ایم سایتمان را بیلد کرده و در داخل پوشه‌ی &lt;code class=&quot;highlighter-rouge&quot;&gt;builded&lt;/code&gt; ذخیره کند، تا اینجا فرآیند بیلد کردن سایت به پایان رسیده است.&lt;/p&gt;

&lt;p&gt;حال رسیدیم به بخش دیپلوی کردن سایت این تنظیمات مربوط به gh-pages است اگر می‌خواهید از سرویس دهنده‌ی دیگری استفاده کنید میتوانید به مستندات TravisCI مراجعه کنید. &lt;a href=&quot;https://docs.travis-ci.com/user/deployment/&quot;&gt;پیوند به مستندات&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;در تنظیمات بالا شما باید دو مقدار را تغییر دهید ، اولین مورد مقدار &lt;code class=&quot;highlighter-rouge&quot;&gt;repo&lt;/code&gt; است که مقابل آن باید آدرس مخزن مربوط به سایت بیلد شده‌ی خود در گیت هاب را وارد نمایید.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;فرض بر این است که دو مخزن وجود دارد ، یکی برای سورس کد ها و دیگری برای سایت بیلد شده.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;مورد دوم که باید تغییر کند مقدار مقابل &lt;code class=&quot;highlighter-rouge&quot;&gt;fqdn&lt;/code&gt; است که آن همان آدرس سایت شماست.&lt;/p&gt;

&lt;p&gt;خوب شاید اکنون این سوال برای شما پیش آمده باشد که &lt;code class=&quot;highlighter-rouge&quot;&gt;$GITHUB_TOKEN&lt;/code&gt; چیست ؟
این سوال کاملا به جا هست این مقدار همان توکن هست که به Travis دسترسی میدهد داخل مخزن سایت بیلد شده‌ی شما Push کند.
این توکن را میتوانید از تنظیمات اکانت گیت هاب در بخش Personal access tokens بدست آورید. &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;پینود&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;این توکن نیازمند دسترسی‌های زیر است:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;repo&lt;/li&gt;
  &lt;li&gt;read:org&lt;/li&gt;
  &lt;li&gt;user:email&lt;/li&gt;
  &lt;li&gt;write:repo_hook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;از آنجایی که این توکن باید خصوصی نگه داشته شود داخل تنظیمات Travis به صورت متغییر نوشته شده است و مقدار آن داخل تنظیمات مخزن داخل سایت Travis و بخش Environment Variables وارد شده است.&lt;/p&gt;

&lt;p&gt;کار تنظیمات به پایان رسید ، از این پس وقتی شما داخل مخزن خود Push می‌کنید Travis کار خود را شروع می‌کند.&lt;/p&gt;</content><author><name></name></author><category term="آموزشی" /><category term="travis" /><category term="travisci" /><category term="ci" /><category term="automation" /><category term="github" /><category term="gh-pages" /><category term="گیت هاب" /><category term="تراویس" /><category term="خودکار سازی" /><summary type="html">در این پست از وبلاگ قصد دارم نحوه استفاده از TravisCI در گیت هاب را همراه با یک مثال عملی توضیح دهم ، من برای وبلاگم از Jekyll که یک سیستم برای ایجاد سایت های استاتیک است استفاده می‌کنم و چند تا از پلاگین هایم به عنوان مثال تاریخ شمسی را گیت هاب (gh-pages) نمیشناسه و برای استفاده از آن ها مجبور بودم که سایتم را روی سیستم خودم بیلد کنم و فایل های بیلد شده را مستقیما push کنم داخل گیت هاب که این کار بسیار خسته کننده بود اما حالا این کار را Travis برای من انجام میده …</summary></entry><entry><title type="html">خرید گیت‌هاب توسط مایکروسافت</title><link href="https://rasooll.com/Microsoft-is-acquiring-GitHub/" rel="alternate" type="text/html" title="خرید گیت‌هاب توسط مایکروسافت" /><published>2018-06-05T00:00:00+00:00</published><updated>2018-06-05T00:00:00+00:00</updated><id>https://rasooll.com/Microsoft-is-acquiring-GitHub</id><content type="html" xml:base="https://rasooll.com/Microsoft-is-acquiring-GitHub/">&lt;div align=&quot;center&quot; style=&quot;font-size: 50px;&quot;&gt;
&lt;i class=&quot;fa fa-windows&quot; aria-hidden=&quot;true&quot; style=&quot;color: #00a1f1;&quot;&gt;&lt;/i&gt;  &lt;i class=&quot;fa fa-github&quot; aria-hidden=&quot;true&quot; style=&quot;color: #333;&quot;&gt;&lt;/i&gt;
&lt;/div&gt;
&lt;p&gt;چند روزی بود که خبرهایی از تصمیم مایکروسافت برای خرید گیت‌هاب به گوش می‌رسید ، عده‌ای اون رو شایعه می‌دونستن تا این که دیروز خبر رسمی رسید که مایکروسافت ، گیت‌هاب را به مبلغ ۷.۵ میلیارد دلار خریده !&lt;br /&gt;
این خبر در نگاه اول شاید کمی نگران کننده به نظر برسه حداقل برای ما ایرانی ها …&lt;/p&gt;

&lt;p&gt;اول این که مایکروسافت گذشته‌ی خوبی برای خرید شرکت‌های دیگه نداره و تقریبا اکثر سرویس‌هایی که خریداری کرده به نوعی نابود شده‌اند ، اما شاید با وجود مدیر جدید این شرکت این اتفاق برای گیت‌هاب نیوفته.
به هرحال من به آینده این سرویس خوشبین هستم.&lt;/p&gt;

&lt;p&gt;اما نگرانی‌ای که ما ایرانی‌ها میتوانیم داشته باشیم ، تحریم هاست. 
تا دیروز نگران بودیم که از داخل گیت‌هاب فیلتر نشه اما الان به نظرم باید نگران باشیم تا از بیرون تحریم نشیم ، حداقل برای اکانت‌های تجاری گیت‌هاب این احتمال که به روی ایرانی‌های بسته بشه بسیار زیاده.&lt;/p&gt;

&lt;p&gt;فقط می‌توانیم امیدوار باشیم که این اتفاق صورت نگیره چون سرویس‌های جایگزین مثل گیت‌لب و… حداقل برای من اون حسی که گیت‌هاب داره رو نداره 😔&lt;/p&gt;</content><author><name></name></author><category term="خبر, عمومی" /><category term="microsoft" /><category term="git" /><category term="github" /><category term="opensource" /><category term="مایکروسافت" /><category term="گیت" /><category term="گیت‌هاب" /><category term="متن‌باز" /><category term="متن باز" /><summary type="html">چند روزی بود که خبرهایی از تصمیم مایکروسافت برای خرید گیت‌هاب به گوش می‌رسید ، عده‌ای اون رو شایعه می‌دونستن تا این که دیروز خبر رسمی رسید که مایکروسافت ، گیت‌هاب را به مبلغ ۷.۵ میلیارد دلار خریده ! این خبر در نگاه اول شاید کمی نگران کننده به نظر برسه حداقل برای ما ایرانی ها …</summary></entry><entry><title type="html">اسکریپت پایتون پرداخت آنلاین از طریق زرین پال</title><link href="https://rasooll.com/python-script-for-payment-via-zarinpal/" rel="alternate" type="text/html" title="اسکریپت پایتون پرداخت آنلاین از طریق زرین پال" /><published>2018-03-11T00:00:00+00:00</published><updated>2018-03-11T00:00:00+00:00</updated><id>https://rasooll.com/python-script-for-payment-via-zarinpal</id><content type="html" xml:base="https://rasooll.com/python-script-for-payment-via-zarinpal/">&lt;p&gt;دیروز یک اسکریپت برای پرداخت آنلاین از طریق زرین پال با استفاده از پایتون ۳ و فریم ورک &lt;a href=&quot;https://bottlepy.org&quot;&gt;Bottle&lt;/a&gt; داخل &lt;a href=&quot;https://github.com/rasooll/zarinpal-easypay&quot;&gt;گیت‌هاب&lt;/a&gt; منتشر کردم و امروز هم تصمیم گرفتم داخل این وبلاگ هم آن را قرار دهم ، برای اطلاعات بیشتر و آموزش نصب بریم به ادامه مطلب…&lt;/p&gt;

&lt;h4 id=&quot;چرا-پایتون--چرا-از-php-استفاده-نکردهام&quot;&gt;چرا پایتون ؟ چرا از PHP استفاده نکرده‌ام؟&lt;/h4&gt;
&lt;p&gt;به نظر من پروژه‌های متن باز در اولین قدم برای استفاده‌ی شخصی ساخته شده‌اند و پس از کامل شدن در اختیار عموم قرار می‌گیرد و اما در مورد این پروژه من روی سرورم PHP را نصب نداشتم و نیازی هم نبود که فقط برای یک اسکریپت آن را نصب کرد ، وقتی پایتون هست PHP چرا ؟؟!!! 😬😬&lt;/p&gt;

&lt;h3 id=&quot;پیشنیازها&quot;&gt;پیشنیازها:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;پایتون ۳
    &lt;ul&gt;
      &lt;li&gt;نصب ماژول‌های پایتون از داخل فایل requirement.txt&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;وب سرور ( آپاچی یا و… ) *اختیاری&lt;/li&gt;
  &lt;li&gt;بانک اطلاعاتی MySQL&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;اسکرین-شات&quot;&gt;اسکرین شات&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://rasooll.com/images/post/zarinpal-easypay.png&quot; alt=&quot;پرداخت آنلاین از طریق زرین پال&quot; title=&quot;zarinpal easypay&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;آموزش-نصب&quot;&gt;آموزش نصب:&lt;/h3&gt;
&lt;p&gt;ابتدا فایل &lt;code class=&quot;highlighter-rouge&quot;&gt;config.py&lt;/code&gt; را ویرایش کرده و اطلاعات مربوط به بانک اطلاعاتی و مرچنت کد دریافتی از زرین پال را وارد نمایید سپس آدرس مربوط به نمایش سایت را نیز باید ویرایش نمایید.&lt;/p&gt;

&lt;p&gt;حال باید اسکریپت را با دستور زیر اجرا نمایید.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 main_application.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;اکنون اسکریپت از طریق آدرس زیر در دسترس است:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;درصورتی که نمی‌خواهید از وب سرور استفاده کنید پورت 8080 را می‌توانید با ویرایش آخرین خط فایل main_application.py به پورت مورد نظر تغییر دهید.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;در اولین اجرا لازم است شاخه‌ی /install را اجرا نمایید تا جداول مربوط در بانک اطلاعاتی ایجاد گردد ، به عنوان مثال:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://localhost:8080/install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;استفاده-از-وب-سرور-آپاچی&quot;&gt;استفاده از وب سرور آپاچی&lt;/h3&gt;
&lt;p&gt;در آپاچی می‌توانیم به صورت Reverse-Proxy نیز از این اسکریپت استفاده کنیم.&lt;/p&gt;

&lt;p&gt;برای اینکار باید ماژول های زیر فعال باشد:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;proxy, proxy_ajp, proxy_http, rewrite, deflate, headers, proxy_balancer, proxy_connect, proxy_html
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;یک سایت جدید ایجاد می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/apache2/sites-enabled/zarinpal-easypay.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;سپس تنظیمات زیر را در آن وارد می‌کنیم:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    ProxyPreserveHost On
    ProxyPass / http://0.0.0.0:8080/
    ProxyPassReverse / http://0.0.0.0:8080/
    ServerName YourDomain.com
    ServerAlias www.YourDomain.com
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;سپس با کلید های Ctrl+X و پس از آن Y فایل را ذخیره می‌کنیم.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl reload apache2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حال با استفاده از آدرس زیر به اسکریپت دسترسی داریم:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://YourDomain.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rasooll/zarinpal-easypay&quot; target=&quot;_blank&quot;&gt;&lt;span class=&quot;btn btn-secondary&quot;&gt;گیت هاب پروژه&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="نمونه کار" /><category term="zarinpal" /><category term="python" /><category term="python3" /><category term="bottle" /><category term="mysql" /><category term="apache" /><category term="nginx" /><category term="زرین‌پال" /><category term="زرین پال" /><category term="پایتون" /><category term="دیتابیس" /><category term="پرداخت" /><category term="پرداخت آنلاین" /><summary type="html">دیروز یک اسکریپت برای پرداخت آنلاین از طریق زرین پال با استفاده از پایتون ۳ و فریم ورک Bottle داخل گیت‌هاب منتشر کردم و امروز هم تصمیم گرفتم داخل این وبلاگ هم آن را قرار دهم ، برای اطلاعات بیشتر و آموزش نصب بریم به ادامه مطلب…</summary></entry><entry><title type="html">آموزش فعالسازی احراز هویت برای MongoDB</title><link href="https://rasooll.com/how-to-enable-auth-for-mongodb/" rel="alternate" type="text/html" title="آموزش فعالسازی احراز هویت برای MongoDB" /><published>2018-02-12T00:00:00+00:00</published><updated>2018-02-12T00:00:00+00:00</updated><id>https://rasooll.com/how-to-enable-auth-for-mongodb</id><content type="html" xml:base="https://rasooll.com/how-to-enable-auth-for-mongodb/">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/post/MongoDB.png&quot; alt=&quot;MongoDB&quot; /&gt;&lt;/p&gt;
&lt;p&gt;زمانی که برای بار اول دیتابیس MongoDB را نصب می‌کنیم این دیتابیس هیچگونه پسوردی برای مدیریت ندارد و میتوان به راحتی به دیتابیس‌های آن دسترسی پیدا کرد در این پست قصد دارم نحوه تنظیم کردن نام کاربری و رمز عبور برای این دیتابیس را توضیح دهم …&lt;/p&gt;

&lt;p&gt;ابتدا باید سرویس این دیتابیس را راه اندازی کنیم که با استفاده از دستور زیر این کار امکان پذیر است :&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start mongod
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;نکته‌ای که گفتنش ضرری ندارد این این است که به هیچ عنوان نباید دستور &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt; را با دسترسی ریشه اجرا کرد چون با اینکار به دلیل تغییر کردن سطح دسترسی فایل های مربوط به دیتابیس ، عملکرد راه اندازی این سرویس توسط Systemctl به مشکل خواهد خورد.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;حال با استفاده از دستور &lt;code class=&quot;highlighter-rouge&quot;&gt;mongo&lt;/code&gt; باید وارد شل دیتابیس شویم و سپس دستور &lt;code class=&quot;highlighter-rouge&quot;&gt;use admin&lt;/code&gt; را وارد می‌کنیم تا وارد دیتابیس admin شویم ، سپس با استفاده از دستور زیر می‌توانیم یک کاربر جدید ایجاد کنیم:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;db.createUser(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;user:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;myUserAdmin&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;abc123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;role:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;user:&lt;/strong&gt; در این قسمت باید نام کاربری مورد نظر خودتان را جایگزین myUserAdmin نمایید.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;pwd:&lt;/strong&gt; در این قسمت نیز باید پسورد مورد نظر خود را جایگزین abc123 کنید.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;سپس با استفاده از &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; از شل مربوط به دیتابیس خارج می‌شویم.&lt;/p&gt;

&lt;p&gt;حال باید تنظیمات زیر را در فایل &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/mongod.conf&lt;/code&gt; قرار دهیم:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;security:
    authorization: enabled
setParameter:
    enableLocalhostAuthBypass: false
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;اکنون باید سرویس مربوط به دیتابیس را راه اندازی مجدد کنیم:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl restart mongod
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;زین پس می‌توان با دستور زیر به MongoDB دسترسی داشت:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mongo --port 27017 -u &lt;span class=&quot;s2&quot;&gt;&quot;myUserAdmin&quot;&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&quot;abc123&quot;&lt;/span&gt; --authenticationDatabase &lt;span class=&quot;s2&quot;&gt;&quot;admin&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;این آموزش برای اوبونتو نسخه ۱۷.۱۰ تهیه شده است.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="آموزشی" /><category term="mongodb" /><category term="auth" /><category term="nosql" /><category term="database" /><category term="security" /><category term="username" /><category term="password" /><category term="مونگو" /><category term="مونگودی‌بی" /><category term="مونگو دی بی" /><category term="احراز هویت" /><category term="احراز" /><category term="هویت" /><summary type="html">زمانی که برای بار اول دیتابیس MongoDB را نصب می‌کنیم این دیتابیس هیچگونه پسوردی برای مدیریت ندارد و میتوان به راحتی به دیتابیس‌های آن دسترسی پیدا کرد در این پست قصد دارم نحوه تنظیم کردن نام کاربری و رمز عبور برای این دیتابیس را توضیح دهم …</summary></entry></feed>